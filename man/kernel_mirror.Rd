% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernel_mirror.R
\name{kernel_mirror}
\alias{kernel_mirror}
\alias{kernel_nmirror}
\alias{kernel_umirror}
\title{Mirror Transition Kernels}
\usage{
kernel_nmirror(
  mu = 0,
  scale = 1,
  warmup = 100,
  tadapt = 100,
  arate = 0.4,
  lb = -.Machine$double.xmax,
  ub = .Machine$double.xmax,
  fixed = FALSE,
  scheme = "joint"
)

kernel_umirror(
  mu = 0,
  scale = 1,
  warmup = 100,
  lb = -.Machine$double.xmax,
  ub = .Machine$double.xmax,
  fixed = FALSE
)
}
\arguments{
\item{mu, scale}{Either a numeric vector or a scalar. Proposal mean and scale.
If scalar, values are recycled to match the number of parameters in the
objective function.}

\item{warmup}{Integer. Number of steps required before starting adapting the
chains.}

\item{tadapt}{Integer. Number of steps during which the adaptation will take
place.}

\item{arate}{Double. Target acceptance rate used as a reference during the
adaptation process.}

\item{lb, ub}{Either a numeric vector or a scalar. Lower and upper bounds for
bounded kernels. When of length 1, the values are recycled to match the number
of parameters in the objective function.}
}
\description{
Mirror Transition Kernels
}
\details{
\code{kernel_nmirror} and \code{kernel_umirror} implemented in Thawornwattana et al.
(2018). Provides simple symmetric transition kernels that pivot around
an approximation of the asymptotic mean. The \code{warmup} parameter here sets
the number of steps before replacing \code{mu} and \code{scale} (sd) with those obtained
from the sample until the \code{warmup} number of iteration.

In the multidimensional case, this implementation just draws a vector of
independent draws from the proposal kernel, instead of using, for example,
a multivariate distribution of some kind. This will be implemented in the
next update of the package.
}
\references{
Thawornwattana, Y., Dalquen, D., & Yang, Z. (2018). Designing Simple and
Efficient Markov Chain Monte Carlo Proposal Kernels. Bayesian Analysis, 13(4),
1037â€“1063. \url{https://doi.org/10.1214/17-BA1084}
}
\seealso{
Other kernels: 
\code{\link{kernel_adapt}()},
\code{\link{kernel_new}()},
\code{\link{kernel_normal}()},
\code{\link{kernel_ram}()},
\code{\link{kernel_unif}()}

Other kernels: 
\code{\link{kernel_adapt}()},
\code{\link{kernel_new}()},
\code{\link{kernel_normal}()},
\code{\link{kernel_ram}()},
\code{\link{kernel_unif}()}

Other kernels: 
\code{\link{kernel_adapt}()},
\code{\link{kernel_new}()},
\code{\link{kernel_normal}()},
\code{\link{kernel_ram}()},
\code{\link{kernel_unif}()}
}
\concept{kernels}
