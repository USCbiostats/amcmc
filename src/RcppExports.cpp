// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// normal_prop
NumericVector normal_prop(const NumericVector& x, const NumericVector& lb, const NumericVector& ub, const NumericVector& scale, const IntegerVector& fixed);
RcppExport SEXP _amcmc_normal_prop(SEXP xSEXP, SEXP lbSEXP, SEXP ubSEXP, SEXP scaleSEXP, SEXP fixedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ub(ubSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type fixed(fixedSEXP);
    rcpp_result_gen = Rcpp::wrap(normal_prop(x, lb, ub, scale, fixed));
    return rcpp_result_gen;
END_RCPP
}
// MCMC
NumericMatrix MCMC(Function fun, const NumericVector& theta, int nsteps, const NumericVector& lb, const NumericVector& ub, const NumericVector& scale, const IntegerVector& fixed);
RcppExport SEXP _amcmc_MCMC(SEXP funSEXP, SEXP thetaSEXP, SEXP nstepsSEXP, SEXP lbSEXP, SEXP ubSEXP, SEXP scaleSEXP, SEXP fixedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Function >::type fun(funSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps(nstepsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ub(ubSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type fixed(fixedSEXP);
    rcpp_result_gen = Rcpp::wrap(MCMC(fun, theta, nsteps, lb, ub, scale, fixed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_amcmc_normal_prop", (DL_FUNC) &_amcmc_normal_prop, 5},
    {"_amcmc_MCMC", (DL_FUNC) &_amcmc_MCMC, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_amcmc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
